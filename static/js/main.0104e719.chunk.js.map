{"version":3,"sources":["types/Select_otions.tsx","api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["SelectOptions","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","todos","selectTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","todoFilter","useState","query","setQuery","ALL","option","setOption","useEffect","onChange","event","target","value","ACTIVE","COMPLETED","placeholder","length","style","pointerEvents","Loader","TodoModal","selectUser","user","setUser","isLoading","setIsLoading","userId","person","href","email","name","App","todosFromServer","setTodosFromServer","isLoaded","setIsLoaded","filteredTodos","setFilteredTodos","selectedTodoId","setSelectedTodoId","idSelector","modalTodo","find","filter","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0104e719.chunk.js","sourcesContent":["export enum SelectOptions {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectTodo: (id: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, selectTodo }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">\n            {todo.id}\n          </td>\n          {todo.completed\n            ? (\n              <td className=\"is-vcentered\">\n                <i className=\"fas fa-check\" />\n              </td>\n            )\n            : (\n              <td className=\"is-vcentered\" />\n            )}\n          <td className=\"is-vcentered is-expanded\">\n            <p className={todo.completed\n              ? 'has-text-success' : 'has-text-danger'}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => selectTodo(todo.id)}\n            >\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React, { useEffect, useState } from 'react';\nimport { SelectOptions } from '../../types/Select_otions';\n\ntype Props = {\n  todoFilter: (query: string, option: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({ todoFilter }) => {\n  const [query, setQuery] = useState('');\n  const [option, setOption] = useState(SelectOptions.ALL);\n\n  useEffect(() => {\n    todoFilter(query, option);\n  }, [query, option]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => setOption(event.target.value as SelectOptions)}\n          >\n            <option value={SelectOptions.ALL}>All</option>\n            <option value={SelectOptions.ACTIVE}>Active</option>\n            <option value={SelectOptions.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo;\n  selectUser: (value: number) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, selectUser }) => {\n  const [user, setUser] = useState<User>();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (todo) {\n      getUser(todo.userId)\n        .then(person => {\n          setUser(person);\n          setIsLoading(false);\n        });\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading\n        ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => selectUser(0)}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {/* <strong className=\"has-text-success\">Done</strong> */}\n                {todo.completed ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                ) : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n                {' by '}\n\n                {user && (\n                  <a href={`mailto:${user.email}`}>\n                    {user.name}\n                  </a>\n                )}\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Todo } from './types/Todo';\nimport { SelectOptions } from './types/Select_otions';\n\nimport { getTodos } from './api';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [todosFromServer, setTodosFromServer] = useState<Todo[]>([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n\n  useEffect(() => {\n    const fetchTodo = () => {\n      getTodos().then(todos => {\n        setTodosFromServer(todos);\n        setFilteredTodos(todos);\n        setIsLoaded(true);\n      });\n    };\n\n    fetchTodo();\n  }, []);\n\n  const todoFilter = (query: string, option: string) => {\n    const todos = todosFromServer.filter(todo => {\n      switch (option) {\n        case SelectOptions.ALL:\n          return todo.title.includes(query);\n\n        case SelectOptions.ACTIVE:\n          return !todo.completed && todo.title.includes(query);\n\n        case SelectOptions.COMPLETED:\n          return todo.completed && todo.title.includes(query);\n\n        default:\n          return false;\n      }\n    });\n\n    setFilteredTodos(todos);\n  };\n\n  const idSelector = (id: number) => setSelectedTodoId(id);\n  const modalTodo = filteredTodos.find(todo => todo.id === selectedTodoId);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter todoFilter={todoFilter} />\n            </div>\n\n            <div className=\"block\">\n              {isLoaded\n                ? <TodoList todos={filteredTodos} selectTodo={idSelector} />\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodoId && modalTodo\n        && <TodoModal todo={modalTodo} selectUser={idSelector} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}